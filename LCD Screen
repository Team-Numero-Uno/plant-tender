#include <Wire.h>
#include <RTClib.h>
#include <LiquidCrystal.h>

// LCD Pins
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal myLCD(rs, en, d4, d5, d6, d7);

// Sensor Pins
const int waterSensorPin = A0;
const int lightSensor = A1;
const int button = 7;          // Mode switch button
const int relaySwitchPin = 6;  // Relay control

// RTC and time constants
RTC_PCF8523 rtc;
const int sunrise = 6;
const int sunset = 18;

// Variables
int SensorValue;
int bVal = 0;
int mode = 0;
unsigned long previousMillis = 0;
const unsigned long interval = 500;

void setup() {
  myLCD.begin(16, 2);
  Serial.begin(9600);

  if (!rtc.begin()) {
    myLCD.print("Couldn't find RTC");
    Serial.println("Couldn't find RTC");
    while (1);
  }

  // Suggestion from chatgpt: Only use this line ONCE to set the RTC, then comment it out
  // rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));

  pinMode(waterSensorPin, INPUT);
  pinMode(lightSensor, INPUT);
  pinMode(button, INPUT);
  pinMode(relaySwitchPin, OUTPUT);

  Serial.println("System Initialized");
}

void loop() {
  DateTime now = rtc.now();
  SensorValue = analogRead(waterSensorPin);
  int raw_light = analogRead(lightSensor);
  int light = map(raw_light, 0, 1023, 0, 100);

  bVal = digitalRead(button);
  if (bVal == 1) {
    mode = (mode + 1) % 4;
    delay(200); // debounce
  }

  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    myLCD.clear();

    if (mode == 0) {
      myLCD.setCursor(0, 0);
      myLCD.print("Light Level: ");
      myLCD.print(light);

      if (light <= 70 && now.hour() > sunrise && now.hour() < sunset) {
        digitalWrite(relaySwitchPin, HIGH);
        myLCD.setCursor(0, 1);
        myLCD.print("Lights: ON");
      } else {
        digitalWrite(relaySwitchPin, LOW);
        myLCD.setCursor(0, 1);
        myLCD.print("Lights: OFF");
      }

      Serial.print("Light level: ");
      Serial.println(light);

    } else if (mode == 1) {
      myLCD.setCursor(0, 0);
      myLCD.print("Water Tank Level:");
      myLCD.setCursor(0, 1);
      myLCD.print(SensorValue >= 10 ? "Adequate" : "Low");

      Serial.print("Water Level Value: ");
      Serial.println(SensorValue);

    } else if (mode == 2) {
      myLCD.setCursor(0, 0);
      myLCD.print("Soil Moisture:");
      myLCD.setCursor(0, 1);
      myLCD.print(SensorValue >= 500 ? "Adequate" : "Low");

      Serial.print("Soil Moisture Value: ");
      Serial.println(SensorValue);

    } else if (mode == 3) {
      myLCD.setCursor(0, 0);
      myLCD.print("Time: ");
      myLCD.setCursor(0, 1);
      if (now.hour() < 10) myLCD.print('0');
      myLCD.print(now.hour());
      myLCD.print(':');
      if (now.minute() < 10) myLCD.print('0');
      myLCD.print(now.minute());
      myLCD.print(':');
      if (now.second() < 10) myLCD.print('0');
      myLCD.print(now.second());

      Serial.print("Hours: ");
      Serial.println(now.hour());
      Serial.print("Minutes: ");
      Serial.println(now.minute());
      Serial.print("Seconds: ");
      Serial.println(now.second());
    }
  }
}
