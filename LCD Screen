#include <LiquidCrystal.h>

// Define variables for the LCDâ€™s pin connections to the Uno
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;

// Use the library to initialize an instance of the LCD class
LiquidCrystal myLCD(rs, en, d4, d5, d6, d7);

// Define sensor pin
const int waterSensorPin = A0;
int SensorValue;

int button = 7;  //button is connected to digital pin 7
int bVal = 0;
int mode = 0;

// Timing variables
unsigned long previousMillis = 0;
const unsigned long interval = 500;

void setup() {
  // Initialize LCD
  myLCD.begin(16, 2);

  // Start serial communication
  Serial.begin(9600);
  Serial.println("Water Level Simulation Sensor");

  // Set sensor pin mode
  pinMode(waterSensorPin, INPUT);

  // Read value of button
  pinMode(button, INPUT);
}

void loop() {
  // Read sensor value
  SensorValue = analogRead(waterSensorPin);

  //read the value of the button when pressed
  bVal = digitalRead(button);

  if (bVal == 1) {
    mode = mode + 1;
    mode = mode % 4;
    delay(200); // optional debounce delay
  }

  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    if (mode == 1) {
      myLCD.clear();
      myLCD.setCursor(0, 0);
      myLCD.print("Water Tank Level:");

      myLCD.setCursor(0, 1);
      if (SensorValue >= 10) {
        myLCD.print("Adequate");
      } else {
        myLCD.print("Low");
      }
    }

    else if (mode == 2) {
      myLCD.clear();
      myLCD.setCursor(0, 0);
      myLCD.print("Soil Mositure:");

      myLCD.setCursor(0, 1);
      if (SensorValue >= 500) {
        myLCD.print("Adequate");
      } else {
        myLCD.print("Low");
      }
    }

    else if (mode == 3) {
      myLCD.clear();
      myLCD.setCursor(0, 0);
      myLCD.print("Time:");

      myLCD.setCursor(0, 1);
      if (SensorValue >= 500) {
        myLCD.print("Adequate");
      } else {
        myLCD.print("Low");
      }
    }

    // Print to serial monitor
    Serial.print("Water Level Value: ");
    Serial.println(SensorValue);
  }
}
